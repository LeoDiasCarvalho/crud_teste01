package com.leo.crud.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.leo.crud.entities.Telefone;
import com.leo.crud.excepions.TelefoneNotFoundException;
import com.leo.crud.services.TelefoneService;

import jakarta.validation.Valid;

@Controller
public class TelefoneController {
	
	@Autowired
	private TelefoneService telefoneService;
	
	@GetMapping("/")
	public String buscarTodosTelefones(Model model) {
		List<Telefone> telefones = telefoneService.buscarTodosTelefones();
		model.addAttribute("listaTelefones", telefones);
		return "/lista-telefone";
	}
	
	
	@GetMapping("/novo")
	public String novoTelefone(Model model) {
		Telefone telefone = new Telefone();
		model.addAttribute("novoTelefone", telefone);
		return "/novo-telefone";
	}
	
	@PostMapping("/gravar")
	public String gravarTelefone(@ModelAttribute("novoTelefone") @Valid Telefone telefone,
			BindingResult erros ,RedirectAttributes attributes) {
		if(erros.hasErrors()) {
			return "/novo-telefone";
		}
		telefoneService.salvarTelefone(telefone);
		attributes.addFlashAttribute("mensagem", "Telefone salvo com sucesso!");
		return "redirect:/novo";
	}
	
	@GetMapping("/apagar/{id}")
	public String apagarTelefone(@PathVariable("id") Long id, RedirectAttributes attributes) {
		try {
			telefoneService.excluirTelefone(id);
		} catch (TelefoneNotFoundException e) {
			attributes.addFlashAttribute("mensagemErro", e.getMessage());
		}
		return "redirect:/";
	}

	@GetMapping("/editar/{id}")
	public String editarFormulario(@PathVariable("id") Long id, RedirectAttributes attributes, Model model) {
		try {
			Telefone telefone = telefoneService.buscarTelefonePorId(id);
			model.addAttribute("objetoTelefone", telefone);
			return "/editar-telefone";
		} catch (TelefoneNotFoundException e) {
			attributes.addFlashAttribute("mensagemErro", e.getMessage());
		}
		return "redirect:/";
	}
	
	@PostMapping("/editar/{id}")
	public String editarTelefone(@PathVariable("id") Long id, 
			@ModelAttribute("objetoTelefone") @Valid Telefone telefone,
			BindingResult erros) {
		
		if(erros.hasErrors()) {
			telefone.setId(id);
			return "/editar-telefone";
		}
		telefoneService.atualizarTelefone(telefone);
		return "redirect:/";
	}
}


